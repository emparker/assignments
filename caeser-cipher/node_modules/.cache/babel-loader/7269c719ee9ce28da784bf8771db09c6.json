{"ast":null,"code":"/*\n * readlineSync\n * https://github.com/anseki/readline-sync\n *\n * Copyright (c) 2019 anseki\n * Licensed under the MIT license.\n */\n'use strict';\n\nvar IS_WIN = process.platform === 'win32',\n    ALGORITHM_CIPHER = 'aes-256-cbc',\n    ALGORITHM_HASH = 'sha256',\n    DEFAULT_ERR_MSG = 'The current environment doesn\\'t support interactive reading from TTY.',\n    fs = require('fs'),\n    TTY = process.binding('tty_wrap').TTY,\n    childProc = require('child_process'),\n    pathUtil = require('path'),\n    defaultOptions = {\n  /* eslint-disable key-spacing */\n  prompt: '> ',\n  hideEchoBack: false,\n  mask: '*',\n  limit: [],\n  limitMessage: 'Input another, please.$<( [)limit(])>',\n  defaultInput: '',\n  trueValue: [],\n  falseValue: [],\n  caseSensitive: false,\n  keepWhitespace: false,\n  encoding: 'utf8',\n  bufferSize: 1024,\n  print: void 0,\n  history: true,\n  cd: false,\n  phContent: void 0,\n  preCheck: void 0\n  /* eslint-enable key-spacing */\n\n},\n    fdR = 'none',\n    isRawMode = false,\n    salt = 0,\n    lastInput = '',\n    inputHistory = [],\n    _DBG_useExt = false,\n    _DBG_checkOptions = false,\n    _DBG_checkMethod = false,\n    fdW,\n    ttyR,\n    extHostPath,\n    extHostArgs,\n    tempdir,\n    rawInput;\n\nfunction getHostArgs(options) {\n  // Send any text to crazy Windows shell safely.\n  function encodeArg(arg) {\n    return arg.replace(/[^\\w\\u0080-\\uFFFF]/g, function (chr) {\n      return '#' + chr.charCodeAt(0) + ';';\n    });\n  }\n\n  return extHostArgs.concat(function (conf) {\n    var args = [];\n    Object.keys(conf).forEach(function (optionName) {\n      if (conf[optionName] === 'boolean') {\n        if (options[optionName]) {\n          args.push('--' + optionName);\n        }\n      } else if (conf[optionName] === 'string') {\n        if (options[optionName]) {\n          args.push('--' + optionName, encodeArg(options[optionName]));\n        }\n      }\n    });\n    return args;\n  }({\n    /* eslint-disable key-spacing */\n    display: 'string',\n    displayOnly: 'boolean',\n    keyIn: 'boolean',\n    hideEchoBack: 'boolean',\n    mask: 'string',\n    limit: 'string',\n    caseSensitive: 'boolean'\n    /* eslint-enable key-spacing */\n\n  }));\n} // piping via files (for Node.js v0.10-)\n\n\nfunction _execFileSync(options, execOptions) {\n  function getTempfile(name) {\n    var suffix = '',\n        filepath,\n        fd;\n    tempdir = tempdir || require('os').tmpdir();\n\n    while (true) {\n      filepath = pathUtil.join(tempdir, name + suffix);\n\n      try {\n        fd = fs.openSync(filepath, 'wx');\n      } catch (e) {\n        if (e.code === 'EEXIST') {\n          suffix++;\n          continue;\n        } else {\n          throw e;\n        }\n      }\n\n      fs.closeSync(fd);\n      break;\n    }\n\n    return filepath;\n  }\n\n  var res = {},\n      pathStdout = getTempfile('readline-sync.stdout'),\n      pathStderr = getTempfile('readline-sync.stderr'),\n      pathExit = getTempfile('readline-sync.exit'),\n      pathDone = getTempfile('readline-sync.done'),\n      crypto = require('crypto'),\n      hostArgs,\n      shellPath,\n      shellArgs,\n      exitCode,\n      extMessage,\n      shasum,\n      decipher,\n      password;\n\n  shasum = crypto.createHash(ALGORITHM_HASH);\n  shasum.update('' + process.pid + salt++ + Math.random());\n  password = shasum.digest('hex');\n  decipher = crypto.createDecipher(ALGORITHM_CIPHER, password);\n  hostArgs = getHostArgs(options);\n\n  if (IS_WIN) {\n    shellPath = process.env.ComSpec || 'cmd.exe';\n    process.env.Q = '\"'; // The quote (\") that isn't escaped.\n    // `()` for ignore space by echo\n\n    shellArgs = ['/V:ON', '/S', '/C', '(%Q%' + shellPath + '%Q% /V:ON /S /C %Q%' +\n    /* ESLint bug? */\n    // eslint-disable-line no-path-concat\n    '%Q%' + extHostPath + '%Q%' + hostArgs.map(function (arg) {\n      return ' %Q%' + arg + '%Q%';\n    }).join('') + ' & (echo !ERRORLEVEL!)>%Q%' + pathExit + '%Q%%Q%) 2>%Q%' + pathStderr + '%Q%' + ' |%Q%' + process.execPath + '%Q% %Q%' + __dirname + '\\\\encrypt.js%Q%' + ' %Q%' + ALGORITHM_CIPHER + '%Q% %Q%' + password + '%Q%' + ' >%Q%' + pathStdout + '%Q%' + ' & (echo 1)>%Q%' + pathDone + '%Q%'];\n  } else {\n    shellPath = '/bin/sh';\n    shellArgs = ['-c', // Use `()`, not `{}` for `-c` (text param)\n    '(\"' + extHostPath + '\"' +\n    /* ESLint bug? */\n    // eslint-disable-line no-path-concat\n    hostArgs.map(function (arg) {\n      return \" '\" + arg.replace(/'/g, \"'\\\\''\") + \"'\";\n    }).join('') + '; echo $?>\"' + pathExit + '\") 2>\"' + pathStderr + '\"' + ' |\"' + process.execPath + '\" \"' + __dirname + '/encrypt.js\"' + ' \"' + ALGORITHM_CIPHER + '\" \"' + password + '\"' + ' >\"' + pathStdout + '\"' + '; echo 1 >\"' + pathDone + '\"'];\n  }\n\n  if (_DBG_checkMethod) {\n    _DBG_checkMethod('_execFileSync', hostArgs);\n  }\n\n  try {\n    childProc.spawn(shellPath, shellArgs, execOptions);\n  } catch (e) {\n    res.error = new Error(e.message);\n    res.error.method = '_execFileSync - spawn';\n    res.error.program = shellPath;\n    res.error.args = shellArgs;\n  }\n\n  while (fs.readFileSync(pathDone, {\n    encoding: options.encoding\n  }).trim() !== '1') {} // eslint-disable-line no-empty\n\n\n  if ((exitCode = fs.readFileSync(pathExit, {\n    encoding: options.encoding\n  }).trim()) === '0') {\n    res.input = decipher.update(fs.readFileSync(pathStdout, {\n      encoding: 'binary'\n    }), 'hex', options.encoding) + decipher.final(options.encoding);\n  } else {\n    extMessage = fs.readFileSync(pathStderr, {\n      encoding: options.encoding\n    }).trim();\n    res.error = new Error(DEFAULT_ERR_MSG + (extMessage ? '\\n' + extMessage : ''));\n    res.error.method = '_execFileSync';\n    res.error.program = shellPath;\n    res.error.args = shellArgs;\n    res.error.extMessage = extMessage;\n    res.error.exitCode = +exitCode;\n  }\n\n  fs.unlinkSync(pathStdout);\n  fs.unlinkSync(pathStderr);\n  fs.unlinkSync(pathExit);\n  fs.unlinkSync(pathDone);\n  return res;\n}\n\nfunction readlineExt(options) {\n  var res = {},\n      execOptions = {\n    env: process.env,\n    encoding: options.encoding\n  },\n      hostArgs,\n      extMessage;\n\n  if (!extHostPath) {\n    if (IS_WIN) {\n      if (process.env.PSModulePath) {\n        // Windows PowerShell\n        extHostPath = 'powershell.exe';\n        extHostArgs = ['-ExecutionPolicy', 'Bypass', '-File', __dirname + '\\\\read.ps1']; // eslint-disable-line no-path-concat\n      } else {\n        // Windows Script Host\n        extHostPath = 'cscript.exe';\n        extHostArgs = ['//nologo', __dirname + '\\\\read.cs.js']; // eslint-disable-line no-path-concat\n      }\n    } else {\n      extHostPath = '/bin/sh';\n      extHostArgs = [__dirname + '/read.sh']; // eslint-disable-line no-path-concat\n    }\n  }\n\n  if (IS_WIN && !process.env.PSModulePath) {\n    // Windows Script Host\n    // ScriptPW (Win XP and Server2003) needs TTY stream as STDIN.\n    // In this case, If STDIN isn't TTY, an error is thrown.\n    execOptions.stdio = [process.stdin];\n  }\n\n  if (childProc.execFileSync) {\n    hostArgs = getHostArgs(options);\n\n    if (_DBG_checkMethod) {\n      _DBG_checkMethod('execFileSync', hostArgs);\n    }\n\n    try {\n      res.input = childProc.execFileSync(extHostPath, hostArgs, execOptions);\n    } catch (e) {\n      // non-zero exit code\n      extMessage = e.stderr ? (e.stderr + '').trim() : '';\n      res.error = new Error(DEFAULT_ERR_MSG + (extMessage ? '\\n' + extMessage : ''));\n      res.error.method = 'execFileSync';\n      res.error.program = extHostPath;\n      res.error.args = hostArgs;\n      res.error.extMessage = extMessage;\n      res.error.exitCode = e.status;\n      res.error.code = e.code;\n      res.error.signal = e.signal;\n    }\n  } else {\n    res = _execFileSync(options, execOptions);\n  }\n\n  if (!res.error) {\n    res.input = res.input.replace(/^\\s*'|'\\s*$/g, '');\n    options.display = '';\n  }\n\n  return res;\n}\n/*\n  display:            string\n  displayOnly:        boolean\n  keyIn:              boolean\n  hideEchoBack:       boolean\n  mask:               string\n  limit:              string (pattern)\n  caseSensitive:      boolean\n  keepWhitespace:     boolean\n  encoding, bufferSize, print\n*/\n\n\nfunction _readlineSync(options) {\n  var input = '',\n      displaySave = options.display,\n      silent = !options.display && options.keyIn && options.hideEchoBack && !options.mask;\n\n  function tryExt() {\n    var res = readlineExt(options);\n\n    if (res.error) {\n      throw res.error;\n    }\n\n    return res.input;\n  }\n\n  if (_DBG_checkOptions) {\n    _DBG_checkOptions(options);\n  }\n\n  (function () {\n    // open TTY\n    var fsB, constants, verNum;\n\n    function getFsB() {\n      if (!fsB) {\n        fsB = process.binding('fs'); // For raw device path\n\n        constants = process.binding('constants'); // for v6.3.0+\n\n        constants = constants && constants.fs && typeof constants.fs.O_RDWR === 'number' ? constants.fs : constants;\n      }\n\n      return fsB;\n    }\n\n    if (typeof fdR !== 'string') {\n      return;\n    }\n\n    fdR = null;\n\n    if (IS_WIN) {\n      // iojs-v2.3.2+ input stream can't read first line. (#18)\n      // ** Don't get process.stdin before check! **\n      // Fixed v5.1.0\n      // Fixed v4.2.4\n      // It regressed again in v5.6.0, it is fixed in v6.2.0.\n      verNum = function (ver) {\n        // getVerNum\n        var nums = ver.replace(/^\\D+/, '').split('.');\n        var verNum = 0;\n\n        if (nums[0] = +nums[0]) {\n          verNum += nums[0] * 10000;\n        }\n\n        if (nums[1] = +nums[1]) {\n          verNum += nums[1] * 100;\n        }\n\n        if (nums[2] = +nums[2]) {\n          verNum += nums[2];\n        }\n\n        return verNum;\n      }(process.version);\n\n      if (!(verNum >= 20302 && verNum < 40204 || verNum >= 50000 && verNum < 50100 || verNum >= 50600 && verNum < 60200) && process.stdin.isTTY) {\n        process.stdin.pause();\n        fdR = process.stdin.fd;\n        ttyR = process.stdin._handle;\n      } else {\n        try {\n          // The stream by fs.openSync('\\\\\\\\.\\\\CON', 'r') can't switch to raw mode.\n          // 'CONIN$' might fail on XP, 2000, 7 (x86).\n          fdR = getFsB().open('CONIN$', constants.O_RDWR, parseInt('0666', 8));\n          ttyR = new TTY(fdR, true);\n        } catch (e) {\n          /* ignore */\n        }\n      }\n\n      if (process.stdout.isTTY) {\n        fdW = process.stdout.fd;\n      } else {\n        try {\n          fdW = fs.openSync('\\\\\\\\.\\\\CON', 'w');\n        } catch (e) {\n          /* ignore */\n        }\n\n        if (typeof fdW !== 'number') {\n          // Retry\n          try {\n            fdW = getFsB().open('CONOUT$', constants.O_RDWR, parseInt('0666', 8));\n          } catch (e) {\n            /* ignore */\n          }\n        }\n      }\n    } else {\n      if (process.stdin.isTTY) {\n        process.stdin.pause();\n\n        try {\n          fdR = fs.openSync('/dev/tty', 'r'); // device file, not process.stdin\n\n          ttyR = process.stdin._handle;\n        } catch (e) {\n          /* ignore */\n        }\n      } else {\n        // Node.js v0.12 read() fails.\n        try {\n          fdR = fs.openSync('/dev/tty', 'r');\n          ttyR = new TTY(fdR, false);\n        } catch (e) {\n          /* ignore */\n        }\n      }\n\n      if (process.stdout.isTTY) {\n        fdW = process.stdout.fd;\n      } else {\n        try {\n          fdW = fs.openSync('/dev/tty', 'w');\n        } catch (e) {\n          /* ignore */\n        }\n      }\n    }\n  })();\n\n  (function () {\n    // try read\n    var isCooked = !options.hideEchoBack && !options.keyIn,\n        atEol,\n        limit,\n        buffer,\n        reqSize,\n        readSize,\n        chunk,\n        line;\n    rawInput = ''; // Node.js v0.10- returns an error if same mode is set.\n\n    function setRawMode(mode) {\n      if (mode === isRawMode) {\n        return true;\n      }\n\n      if (ttyR.setRawMode(mode) !== 0) {\n        return false;\n      }\n\n      isRawMode = mode;\n      return true;\n    }\n\n    if (_DBG_useExt || !ttyR || typeof fdW !== 'number' && (options.display || !isCooked)) {\n      input = tryExt();\n      return;\n    }\n\n    if (options.display) {\n      fs.writeSync(fdW, options.display);\n      options.display = '';\n    }\n\n    if (options.displayOnly) {\n      return;\n    }\n\n    if (!setRawMode(!isCooked)) {\n      input = tryExt();\n      return;\n    }\n\n    reqSize = options.keyIn ? 1 : options.bufferSize; // Check `allocUnsafe` to make sure of the new API.\n\n    buffer = Buffer.allocUnsafe && Buffer.alloc ? Buffer.alloc(reqSize) : new Buffer(reqSize);\n\n    if (options.keyIn && options.limit) {\n      limit = new RegExp('[^' + options.limit + ']', 'g' + (options.caseSensitive ? '' : 'i'));\n    }\n\n    while (true) {\n      readSize = 0;\n\n      try {\n        readSize = fs.readSync(fdR, buffer, 0, reqSize);\n      } catch (e) {\n        if (e.code !== 'EOF') {\n          setRawMode(false);\n          input += tryExt();\n          return;\n        }\n      }\n\n      if (readSize > 0) {\n        chunk = buffer.toString(options.encoding, 0, readSize);\n        rawInput += chunk;\n      } else {\n        chunk = '\\n';\n        rawInput += String.fromCharCode(0);\n      }\n\n      if (chunk && typeof (line = (chunk.match(/^(.*?)[\\r\\n]/) || [])[1]) === 'string') {\n        chunk = line;\n        atEol = true;\n      } // other ctrl-chars\n      // eslint-disable-next-line no-control-regex\n\n\n      if (chunk) {\n        chunk = chunk.replace(/[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]/g, '');\n      }\n\n      if (chunk && limit) {\n        chunk = chunk.replace(limit, '');\n      }\n\n      if (chunk) {\n        if (!isCooked) {\n          if (!options.hideEchoBack) {\n            fs.writeSync(fdW, chunk);\n          } else if (options.mask) {\n            fs.writeSync(fdW, new Array(chunk.length + 1).join(options.mask));\n          }\n        }\n\n        input += chunk;\n      }\n\n      if (!options.keyIn && atEol || options.keyIn && input.length >= reqSize) {\n        break;\n      }\n    }\n\n    if (!isCooked && !silent) {\n      fs.writeSync(fdW, '\\n');\n    }\n\n    setRawMode(false);\n  })();\n\n  if (options.print && !silent) {\n    options.print(displaySave + (options.displayOnly ? '' : (options.hideEchoBack ? new Array(input.length + 1).join(options.mask) : input) + '\\n' // must at least write '\\n'\n    ), options.encoding);\n  }\n\n  return options.displayOnly ? '' : lastInput = options.keepWhitespace || options.keyIn ? input : input.trim();\n}\n\nfunction flattenArray(array, validator) {\n  var flatArray = [];\n\n  function _flattenArray(array) {\n    if (array == null) {\n      return;\n    }\n\n    if (Array.isArray(array)) {\n      array.forEach(_flattenArray);\n    } else if (!validator || validator(array)) {\n      flatArray.push(array);\n    }\n  }\n\n  _flattenArray(array);\n\n  return flatArray;\n}\n\nfunction escapePattern(pattern) {\n  return pattern.replace(/[\\x00-\\x7f]/g, // eslint-disable-line no-control-regex\n  function (s) {\n    return '\\\\x' + ('00' + s.charCodeAt().toString(16)).substr(-2);\n  });\n} // margeOptions(options1, options2 ... )\n// margeOptions(true, options1, options2 ... )\n//    arg1=true : Start from defaultOptions and pick elements of that.\n\n\nfunction margeOptions() {\n  var optionsList = Array.prototype.slice.call(arguments),\n      optionNames,\n      fromDefault;\n\n  if (optionsList.length && typeof optionsList[0] === 'boolean') {\n    fromDefault = optionsList.shift();\n\n    if (fromDefault) {\n      optionNames = Object.keys(defaultOptions);\n      optionsList.unshift(defaultOptions);\n    }\n  }\n\n  return optionsList.reduce(function (options, optionsPart) {\n    if (optionsPart == null) {\n      return options;\n    } // ======== DEPRECATED ========\n\n\n    if (optionsPart.hasOwnProperty('noEchoBack') && !optionsPart.hasOwnProperty('hideEchoBack')) {\n      optionsPart.hideEchoBack = optionsPart.noEchoBack;\n      delete optionsPart.noEchoBack;\n    }\n\n    if (optionsPart.hasOwnProperty('noTrim') && !optionsPart.hasOwnProperty('keepWhitespace')) {\n      optionsPart.keepWhitespace = optionsPart.noTrim;\n      delete optionsPart.noTrim;\n    } // ======== /DEPRECATED ========\n\n\n    if (!fromDefault) {\n      optionNames = Object.keys(optionsPart);\n    }\n\n    optionNames.forEach(function (optionName) {\n      var value;\n\n      if (!optionsPart.hasOwnProperty(optionName)) {\n        return;\n      }\n\n      value = optionsPart[optionName];\n      /* eslint-disable no-multi-spaces */\n\n      switch (optionName) {\n        //                    _readlineSync <- *    * -> defaultOptions\n        // ================ string\n        case 'mask': // *    *\n\n        case 'limitMessage': //      *\n\n        case 'defaultInput': //      *\n\n        case 'encoding':\n          // *    *\n          value = value != null ? value + '' : '';\n\n          if (value && optionName !== 'limitMessage') {\n            value = value.replace(/[\\r\\n]/g, '');\n          }\n\n          options[optionName] = value;\n          break;\n        // ================ number(int)\n\n        case 'bufferSize':\n          // *    *\n          if (!isNaN(value = parseInt(value, 10)) && typeof value === 'number') {\n            options[optionName] = value; // limited updating (number is needed)\n          }\n\n          break;\n        // ================ boolean\n\n        case 'displayOnly': // *\n\n        case 'keyIn': // *\n\n        case 'hideEchoBack': // *    *\n\n        case 'caseSensitive': // *    *\n\n        case 'keepWhitespace': // *    *\n\n        case 'history': //      *\n\n        case 'cd':\n          //      *\n          options[optionName] = !!value;\n          break;\n        // ================ array\n\n        case 'limit': // *    *     to string for readlineExt\n\n        case 'trueValue': //      *\n\n        case 'falseValue':\n          //      *\n          options[optionName] = flattenArray(value, function (value) {\n            var type = typeof value;\n            return type === 'string' || type === 'number' || type === 'function' || value instanceof RegExp;\n          }).map(function (value) {\n            return typeof value === 'string' ? value.replace(/[\\r\\n]/g, '') : value;\n          });\n          break;\n        // ================ function\n\n        case 'print': // *    *\n\n        case 'phContent': //      *\n\n        case 'preCheck':\n          //      *\n          options[optionName] = typeof value === 'function' ? value : void 0;\n          break;\n        // ================ other\n\n        case 'prompt': //      *\n\n        case 'display':\n          // *\n          options[optionName] = value != null ? value : '';\n          break;\n        // no default\n      }\n      /* eslint-enable no-multi-spaces */\n\n    });\n    return options;\n  }, {});\n}\n\nfunction isMatched(res, comps, caseSensitive) {\n  return comps.some(function (comp) {\n    var type = typeof comp;\n    return type === 'string' ? caseSensitive ? res === comp : res.toLowerCase() === comp.toLowerCase() : type === 'number' ? parseFloat(res) === comp : type === 'function' ? comp(res) : comp instanceof RegExp ? comp.test(res) : false;\n  });\n}\n\nfunction replaceHomePath(path, expand) {\n  var homePath = pathUtil.normalize(IS_WIN ? (process.env.HOMEDRIVE || '') + (process.env.HOMEPATH || '') : process.env.HOME || '').replace(/[/\\\\]+$/, '');\n  path = pathUtil.normalize(path);\n  return expand ? path.replace(/^~(?=\\/|\\\\|$)/, homePath) : path.replace(new RegExp('^' + escapePattern(homePath) + '(?=\\\\/|\\\\\\\\|$)', IS_WIN ? 'i' : ''), '~');\n}\n\nfunction replacePlaceholder(text, generator) {\n  var PTN_INNER = '(?:\\\\(([\\\\s\\\\S]*?)\\\\))?(\\\\w+|.-.)(?:\\\\(([\\\\s\\\\S]*?)\\\\))?',\n      rePlaceholder = new RegExp('(\\\\$)?(\\\\$<' + PTN_INNER + '>)', 'g'),\n      rePlaceholderCompat = new RegExp('(\\\\$)?(\\\\$\\\\{' + PTN_INNER + '\\\\})', 'g');\n\n  function getPlaceholderText(s, escape, placeholder, pre, param, post) {\n    var text;\n    return escape || typeof (text = generator(param)) !== 'string' ? placeholder : text ? (pre || '') + text + (post || '') : '';\n  }\n\n  return text.replace(rePlaceholder, getPlaceholderText).replace(rePlaceholderCompat, getPlaceholderText);\n}\n\nfunction array2charlist(array, caseSensitive, collectSymbols) {\n  var group = [],\n      groupClass = -1,\n      charCode = 0,\n      symbols = '',\n      values,\n      suppressed;\n\n  function addGroup(groups, group) {\n    if (group.length > 3) {\n      // ellipsis\n      groups.push(group[0] + '...' + group[group.length - 1]);\n      suppressed = true;\n    } else if (group.length) {\n      groups = groups.concat(group);\n    }\n\n    return groups;\n  }\n\n  values = array.reduce(function (chars, value) {\n    return chars.concat((value + '').split(''));\n  }, []).reduce(function (groups, curChar) {\n    var curGroupClass, curCharCode;\n\n    if (!caseSensitive) {\n      curChar = curChar.toLowerCase();\n    }\n\n    curGroupClass = /^\\d$/.test(curChar) ? 1 : /^[A-Z]$/.test(curChar) ? 2 : /^[a-z]$/.test(curChar) ? 3 : 0;\n\n    if (collectSymbols && curGroupClass === 0) {\n      symbols += curChar;\n    } else {\n      curCharCode = curChar.charCodeAt(0);\n\n      if (curGroupClass && curGroupClass === groupClass && curCharCode === charCode + 1) {\n        group.push(curChar);\n      } else {\n        groups = addGroup(groups, group);\n        group = [curChar];\n        groupClass = curGroupClass;\n      }\n\n      charCode = curCharCode;\n    }\n\n    return groups;\n  }, []);\n  values = addGroup(values, group); // last group\n\n  if (symbols) {\n    values.push(symbols);\n    suppressed = true;\n  }\n\n  return {\n    values: values,\n    suppressed: suppressed\n  };\n}\n\nfunction joinChunks(chunks, suppressed) {\n  return chunks.join(chunks.length > 2 ? ', ' : suppressed ? ' / ' : '/');\n}\n\nfunction getPhContent(param, options) {\n  var resCharlist = {},\n      text,\n      values,\n      arg;\n\n  if (options.phContent) {\n    text = options.phContent(param, options);\n  }\n\n  if (typeof text !== 'string') {\n    switch (param) {\n      case 'hideEchoBack':\n      case 'mask':\n      case 'defaultInput':\n      case 'caseSensitive':\n      case 'keepWhitespace':\n      case 'encoding':\n      case 'bufferSize':\n      case 'history':\n      case 'cd':\n        text = !options.hasOwnProperty(param) ? '' : typeof options[param] === 'boolean' ? options[param] ? 'on' : 'off' : options[param] + '';\n        break;\n      // case 'prompt':\n      // case 'query':\n      // case 'display':\n      //   text = options.hasOwnProperty('displaySrc') ? options.displaySrc + '' : '';\n      //   break;\n\n      case 'limit':\n      case 'trueValue':\n      case 'falseValue':\n        values = options[options.hasOwnProperty(param + 'Src') ? param + 'Src' : param];\n\n        if (options.keyIn) {\n          // suppress\n          resCharlist = array2charlist(values, options.caseSensitive);\n          values = resCharlist.values;\n        } else {\n          values = values.filter(function (value) {\n            var type = typeof value;\n            return type === 'string' || type === 'number';\n          });\n        }\n\n        text = joinChunks(values, resCharlist.suppressed);\n        break;\n\n      case 'limitCount':\n      case 'limitCountNotZero':\n        text = options[options.hasOwnProperty('limitSrc') ? 'limitSrc' : 'limit'].length;\n        text = text || param !== 'limitCountNotZero' ? text + '' : '';\n        break;\n\n      case 'lastInput':\n        text = lastInput;\n        break;\n\n      case 'cwd':\n      case 'CWD':\n      case 'cwdHome':\n        text = process.cwd();\n\n        if (param === 'CWD') {\n          text = pathUtil.basename(text);\n        } else if (param === 'cwdHome') {\n          text = replaceHomePath(text);\n        }\n\n        break;\n\n      case 'date':\n      case 'time':\n      case 'localeDate':\n      case 'localeTime':\n        text = new Date()['to' + param.replace(/^./, function (str) {\n          return str.toUpperCase();\n        }) + 'String']();\n        break;\n\n      default:\n        // with arg\n        if (typeof (arg = (param.match(/^history_m(\\d+)$/) || [])[1]) === 'string') {\n          text = inputHistory[inputHistory.length - arg] || '';\n        }\n\n    }\n  }\n\n  return text;\n}\n\nfunction getPhCharlist(param) {\n  var matches = /^(.)-(.)$/.exec(param),\n      text = '',\n      from,\n      to,\n      code,\n      step;\n\n  if (!matches) {\n    return null;\n  }\n\n  from = matches[1].charCodeAt(0);\n  to = matches[2].charCodeAt(0);\n  step = from < to ? 1 : -1;\n\n  for (code = from; code !== to + step; code += step) {\n    text += String.fromCharCode(code);\n  }\n\n  return text;\n} // cmd \"arg\" \" a r g \" \"\" 'a\"r\"g' \"a\"\"rg\" \"arg\n\n\nfunction parseCl(cl) {\n  var reToken = new RegExp(/(\\s*)(?:(\"|')(.*?)(?:\\2|$)|(\\S+))/g),\n      taken = '',\n      args = [],\n      matches,\n      part;\n  cl = cl.trim();\n\n  while (matches = reToken.exec(cl)) {\n    part = matches[3] || matches[4] || '';\n\n    if (matches[1]) {\n      args.push(taken);\n      taken = '';\n    }\n\n    taken += part;\n  }\n\n  if (taken) {\n    args.push(taken);\n  }\n\n  return args;\n}\n\nfunction toBool(res, options) {\n  return options.trueValue.length && isMatched(res, options.trueValue, options.caseSensitive) ? true : options.falseValue.length && isMatched(res, options.falseValue, options.caseSensitive) ? false : res;\n}\n\nfunction getValidLine(options) {\n  var res, forceNext, limitMessage, matches, histInput, args, resCheck;\n\n  function _getPhContent(param) {\n    return getPhContent(param, options);\n  }\n\n  function addDisplay(text) {\n    options.display += (/[^\\r\\n]$/.test(options.display) ? '\\n' : '') + text;\n  }\n\n  options.limitSrc = options.limit;\n  options.displaySrc = options.display;\n  options.limit = ''; // for readlineExt\n\n  options.display = replacePlaceholder(options.display + '', _getPhContent);\n\n  while (true) {\n    res = _readlineSync(options);\n    forceNext = false;\n    limitMessage = '';\n\n    if (options.defaultInput && !res) {\n      res = options.defaultInput;\n    }\n\n    if (options.history) {\n      if (matches = /^\\s*!(?:!|-1)(:p)?\\s*$/.exec(res)) {\n        // `!!` `!-1` +`:p`\n        histInput = inputHistory[0] || '';\n\n        if (matches[1]) {\n          // only display\n          forceNext = true;\n        } else {\n          // replace input\n          res = histInput;\n        } // Show it even if it is empty (NL only).\n\n\n        addDisplay(histInput + '\\n');\n\n        if (!forceNext) {\n          // Loop may break\n          options.displayOnly = true;\n\n          _readlineSync(options);\n\n          options.displayOnly = false;\n        }\n      } else if (res && res !== inputHistory[inputHistory.length - 1]) {\n        inputHistory = [res];\n      }\n    }\n\n    if (!forceNext && options.cd && res) {\n      args = parseCl(res);\n\n      switch (args[0].toLowerCase()) {\n        case 'cd':\n          if (args[1]) {\n            try {\n              process.chdir(replaceHomePath(args[1], true));\n            } catch (e) {\n              addDisplay(e + '');\n            }\n          }\n\n          forceNext = true;\n          break;\n\n        case 'pwd':\n          addDisplay(process.cwd());\n          forceNext = true;\n          break;\n        // no default\n      }\n    }\n\n    if (!forceNext && options.preCheck) {\n      resCheck = options.preCheck(res, options);\n      res = resCheck.res;\n\n      if (resCheck.forceNext) {\n        forceNext = true;\n      } // Don't switch to false.\n\n    }\n\n    if (!forceNext) {\n      if (!options.limitSrc.length || isMatched(res, options.limitSrc, options.caseSensitive)) {\n        break;\n      }\n\n      if (options.limitMessage) {\n        limitMessage = replacePlaceholder(options.limitMessage, _getPhContent);\n      }\n    }\n\n    addDisplay((limitMessage ? limitMessage + '\\n' : '') + replacePlaceholder(options.displaySrc + '', _getPhContent));\n  }\n\n  return toBool(res, options);\n} // for dev\n\n\nexports._DBG_set_useExt = function (val) {\n  _DBG_useExt = val;\n};\n\nexports._DBG_set_checkOptions = function (val) {\n  _DBG_checkOptions = val;\n};\n\nexports._DBG_set_checkMethod = function (val) {\n  _DBG_checkMethod = val;\n};\n\nexports._DBG_clearHistory = function () {\n  lastInput = '';\n  inputHistory = [];\n}; // ------------------------------------\n\n\nexports.setDefaultOptions = function (options) {\n  defaultOptions = margeOptions(true, options);\n  return margeOptions(true); // copy\n};\n\nexports.question = function (query, options) {\n  /* eslint-disable key-spacing */\n  return getValidLine(margeOptions(margeOptions(true, options), {\n    display: query\n  }));\n  /* eslint-enable key-spacing */\n};\n\nexports.prompt = function (options) {\n  var readOptions = margeOptions(true, options);\n  readOptions.display = readOptions.prompt;\n  return getValidLine(readOptions);\n};\n\nexports.keyIn = function (query, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions(margeOptions(true, options), {\n    display: query,\n    keyIn: true,\n    keepWhitespace: true\n  });\n  /* eslint-enable key-spacing */\n  // char list\n\n  readOptions.limitSrc = readOptions.limit.filter(function (value) {\n    var type = typeof value;\n    return type === 'string' || type === 'number';\n  }).map(function (text) {\n    return replacePlaceholder(text + '', getPhCharlist);\n  }); // pattern\n\n  readOptions.limit = escapePattern(readOptions.limitSrc.join(''));\n  ['trueValue', 'falseValue'].forEach(function (optionName) {\n    readOptions[optionName] = readOptions[optionName].reduce(function (comps, comp) {\n      var type = typeof comp;\n\n      if (type === 'string' || type === 'number') {\n        comps = comps.concat((comp + '').split(''));\n      } else {\n        comps.push(comp);\n      }\n\n      return comps;\n    }, []);\n  });\n  readOptions.display = replacePlaceholder(readOptions.display + '', function (param) {\n    return getPhContent(param, readOptions);\n  });\n  return toBool(_readlineSync(readOptions), readOptions);\n}; // ------------------------------------\n\n\nexports.questionEMail = function (query, options) {\n  if (query == null) {\n    query = 'Input e-mail address: ';\n  }\n  /* eslint-disable key-spacing */\n\n\n  return exports.question(query, margeOptions({\n    // -------- default\n    hideEchoBack: false,\n    // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address\n    limit: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n    limitMessage: 'Input valid e-mail address, please.',\n    trueValue: null,\n    falseValue: null\n  }, options, {\n    // -------- forced\n    keepWhitespace: false,\n    cd: false\n  }));\n  /* eslint-enable key-spacing */\n};\n\nexports.questionNewPassword = function (query, options) {\n  /* eslint-disable key-spacing */\n  var resCharlist,\n      min,\n      max,\n      readOptions = margeOptions({\n    // -------- default\n    hideEchoBack: true,\n    mask: '*',\n    limitMessage: 'It can include: $<charlist>\\n' + 'And the length must be: $<length>',\n    trueValue: null,\n    falseValue: null,\n    caseSensitive: true\n  }, options, {\n    // -------- forced\n    history: false,\n    cd: false,\n    // limit (by charlist etc.),\n    phContent: function (param) {\n      return param === 'charlist' ? resCharlist.text : param === 'length' ? min + '...' + max : null;\n    }\n  }),\n      // added:     charlist, min, max, confirmMessage, unmatchMessage\n  charlist,\n      confirmMessage,\n      unmatchMessage,\n      limit,\n      limitMessage,\n      res1,\n      res2;\n  /* eslint-enable key-spacing */\n\n  options = options || {};\n  charlist = replacePlaceholder(options.charlist ? options.charlist + '' : '$<!-~>', getPhCharlist);\n\n  if (isNaN(min = parseInt(options.min, 10)) || typeof min !== 'number') {\n    min = 12;\n  }\n\n  if (isNaN(max = parseInt(options.max, 10)) || typeof max !== 'number') {\n    max = 24;\n  }\n\n  limit = new RegExp('^[' + escapePattern(charlist) + ']{' + min + ',' + max + '}$');\n  resCharlist = array2charlist([charlist], readOptions.caseSensitive, true);\n  resCharlist.text = joinChunks(resCharlist.values, resCharlist.suppressed);\n  confirmMessage = options.confirmMessage != null ? options.confirmMessage : 'Reinput a same one to confirm it: ';\n  unmatchMessage = options.unmatchMessage != null ? options.unmatchMessage : 'It differs from first one.' + ' Hit only the Enter key if you want to retry from first one.';\n\n  if (query == null) {\n    query = 'Input new password: ';\n  }\n\n  limitMessage = readOptions.limitMessage;\n\n  while (!res2) {\n    readOptions.limit = limit;\n    readOptions.limitMessage = limitMessage;\n    res1 = exports.question(query, readOptions);\n    readOptions.limit = [res1, ''];\n    readOptions.limitMessage = unmatchMessage;\n    res2 = exports.question(confirmMessage, readOptions);\n  }\n\n  return res1;\n};\n\nfunction _questionNum(query, options, parser) {\n  var validValue;\n\n  function getValidValue(value) {\n    validValue = parser(value);\n    return !isNaN(validValue) && typeof validValue === 'number';\n  }\n  /* eslint-disable key-spacing */\n\n\n  exports.question(query, margeOptions({\n    // -------- default\n    limitMessage: 'Input valid number, please.'\n  }, options, {\n    // -------- forced\n    limit: getValidValue,\n    cd: false // trueValue, falseValue, caseSensitive, keepWhitespace don't work.\n\n  }));\n  /* eslint-enable key-spacing */\n\n  return validValue;\n}\n\nexports.questionInt = function (query, options) {\n  return _questionNum(query, options, function (value) {\n    return parseInt(value, 10);\n  });\n};\n\nexports.questionFloat = function (query, options) {\n  return _questionNum(query, options, parseFloat);\n};\n\nexports.questionPath = function (query, options) {\n  /* eslint-disable key-spacing */\n  var error = '',\n      validPath,\n      // before readOptions\n  readOptions = margeOptions({\n    // -------- default\n    hideEchoBack: false,\n    limitMessage: '$<error(\\n)>Input valid path, please.' + '$<( Min:)min>$<( Max:)max>',\n    history: true,\n    cd: true\n  }, options, {\n    // -------- forced\n    keepWhitespace: false,\n    limit: function (value) {\n      var exists, stat, res;\n      value = replaceHomePath(value, true);\n      error = ''; // for validate\n      // mkdir -p\n\n      function mkdirParents(dirPath) {\n        dirPath.split(/\\/|\\\\/).reduce(function (parents, dir) {\n          var path = pathUtil.resolve(parents += dir + pathUtil.sep);\n\n          if (!fs.existsSync(path)) {\n            fs.mkdirSync(path);\n          } else if (!fs.statSync(path).isDirectory()) {\n            throw new Error('Non directory already exists: ' + path);\n          }\n\n          return parents;\n        }, '');\n      }\n\n      try {\n        exists = fs.existsSync(value);\n        validPath = exists ? fs.realpathSync(value) : pathUtil.resolve(value); // options.exists default: true, not-bool: no-check\n\n        if (!options.hasOwnProperty('exists') && !exists || typeof options.exists === 'boolean' && options.exists !== exists) {\n          error = (exists ? 'Already exists' : 'No such file or directory') + ': ' + validPath;\n          return false;\n        }\n\n        if (!exists && options.create) {\n          if (options.isDirectory) {\n            mkdirParents(validPath);\n          } else {\n            mkdirParents(pathUtil.dirname(validPath));\n            fs.closeSync(fs.openSync(validPath, 'w')); // touch\n          }\n\n          validPath = fs.realpathSync(validPath);\n        }\n\n        if (exists && (options.min || options.max || options.isFile || options.isDirectory)) {\n          stat = fs.statSync(validPath); // type check first (directory has zero size)\n\n          if (options.isFile && !stat.isFile()) {\n            error = 'Not file: ' + validPath;\n            return false;\n          } else if (options.isDirectory && !stat.isDirectory()) {\n            error = 'Not directory: ' + validPath;\n            return false;\n          } else if (options.min && stat.size < +options.min || options.max && stat.size > +options.max) {\n            error = 'Size ' + stat.size + ' is out of range: ' + validPath;\n            return false;\n          }\n        }\n\n        if (typeof options.validate === 'function' && (res = options.validate(validPath)) !== true) {\n          if (typeof res === 'string') {\n            error = res;\n          }\n\n          return false;\n        }\n      } catch (e) {\n        error = e + '';\n        return false;\n      }\n\n      return true;\n    },\n    // trueValue, falseValue, caseSensitive don't work.\n    phContent: function (param) {\n      return param === 'error' ? error : param !== 'min' && param !== 'max' ? null : options.hasOwnProperty(param) ? options[param] + '' : '';\n    }\n  }); // added:     exists, create, min, max, isFile, isDirectory, validate\n\n  /* eslint-enable key-spacing */\n\n  options = options || {};\n\n  if (query == null) {\n    query = 'Input path (you can \"cd\" and \"pwd\"): ';\n  }\n\n  exports.question(query, readOptions);\n  return validPath;\n}; // props: preCheck, args, hRes, limit\n\n\nfunction getClHandler(commandHandler, options) {\n  var clHandler = {},\n      hIndex = {};\n\n  if (typeof commandHandler === 'object') {\n    Object.keys(commandHandler).forEach(function (cmd) {\n      if (typeof commandHandler[cmd] === 'function') {\n        hIndex[options.caseSensitive ? cmd : cmd.toLowerCase()] = commandHandler[cmd];\n      }\n    });\n\n    clHandler.preCheck = function (res) {\n      var cmdKey;\n      clHandler.args = parseCl(res);\n      cmdKey = clHandler.args[0] || '';\n\n      if (!options.caseSensitive) {\n        cmdKey = cmdKey.toLowerCase();\n      }\n\n      clHandler.hRes = cmdKey !== '_' && hIndex.hasOwnProperty(cmdKey) ? hIndex[cmdKey].apply(res, clHandler.args.slice(1)) : hIndex.hasOwnProperty('_') ? hIndex._.apply(res, clHandler.args) : null;\n      return {\n        res: res,\n        forceNext: false\n      };\n    };\n\n    if (!hIndex.hasOwnProperty('_')) {\n      clHandler.limit = function () {\n        // It's called after preCheck.\n        var cmdKey = clHandler.args[0] || '';\n\n        if (!options.caseSensitive) {\n          cmdKey = cmdKey.toLowerCase();\n        }\n\n        return hIndex.hasOwnProperty(cmdKey);\n      };\n    }\n  } else {\n    clHandler.preCheck = function (res) {\n      clHandler.args = parseCl(res);\n      clHandler.hRes = typeof commandHandler === 'function' ? commandHandler.apply(res, clHandler.args) : true; // true for break loop\n\n      return {\n        res: res,\n        forceNext: false\n      };\n    };\n  }\n\n  return clHandler;\n}\n\nexports.promptCL = function (commandHandler, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n    // -------- default\n    hideEchoBack: false,\n    limitMessage: 'Requested command is not available.',\n    caseSensitive: false,\n    history: true\n  }, options),\n      //   -------- forced\n  //   trueValue, falseValue, keepWhitespace don't work.\n  //   preCheck, limit (by clHandler)\n  clHandler = getClHandler(commandHandler, readOptions);\n  /* eslint-enable key-spacing */\n\n  readOptions.limit = clHandler.limit;\n  readOptions.preCheck = clHandler.preCheck;\n  exports.prompt(readOptions);\n  return clHandler.args;\n};\n\nexports.promptLoop = function (inputHandler, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n    // -------- default\n    hideEchoBack: false,\n    trueValue: null,\n    falseValue: null,\n    caseSensitive: false,\n    history: true\n  }, options);\n  /* eslint-enable key-spacing */\n\n  while (true) {\n    if (inputHandler(exports.prompt(readOptions))) {\n      break;\n    }\n  } // return; // nothing is returned\n\n};\n\nexports.promptCLLoop = function (commandHandler, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n    // -------- default\n    hideEchoBack: false,\n    limitMessage: 'Requested command is not available.',\n    caseSensitive: false,\n    history: true\n  }, options),\n      //   -------- forced\n  //   trueValue, falseValue, keepWhitespace don't work.\n  //   preCheck, limit (by clHandler)\n  clHandler = getClHandler(commandHandler, readOptions);\n  /* eslint-enable key-spacing */\n\n  readOptions.limit = clHandler.limit;\n  readOptions.preCheck = clHandler.preCheck;\n\n  while (true) {\n    exports.prompt(readOptions);\n\n    if (clHandler.hRes) {\n      break;\n    }\n  } // return; // nothing is returned\n\n};\n\nexports.promptSimShell = function (options) {\n  /* eslint-disable key-spacing */\n  return exports.prompt(margeOptions({\n    // -------- default\n    hideEchoBack: false,\n    history: true\n  }, options, {\n    // -------- forced\n    prompt: function () {\n      return IS_WIN ? '$<cwd>>' : // 'user@host:cwd$ '\n      (process.env.USER || '') + (process.env.HOSTNAME ? '@' + process.env.HOSTNAME.replace(/\\..*$/, '') : '') + ':$<cwdHome>$ ';\n    }()\n  }));\n  /* eslint-enable key-spacing */\n};\n\nfunction _keyInYN(query, options, limit) {\n  var res;\n\n  if (query == null) {\n    query = 'Are you sure? ';\n  }\n\n  if ((!options || options.guide !== false) && (query += '')) {\n    query = query.replace(/\\s*:?\\s*$/, '') + ' [y/n]: ';\n  }\n  /* eslint-disable key-spacing */\n\n\n  res = exports.keyIn(query, margeOptions(options, {\n    // -------- forced\n    hideEchoBack: false,\n    limit: limit,\n    trueValue: 'y',\n    falseValue: 'n',\n    caseSensitive: false // mask doesn't work.\n\n  })); // added:     guide\n\n  /* eslint-enable key-spacing */\n\n  return typeof res === 'boolean' ? res : '';\n}\n\nexports.keyInYN = function (query, options) {\n  return _keyInYN(query, options);\n};\n\nexports.keyInYNStrict = function (query, options) {\n  return _keyInYN(query, options, 'yn');\n};\n\nexports.keyInPause = function (query, options) {\n  if (query == null) {\n    query = 'Continue...';\n  }\n\n  if ((!options || options.guide !== false) && (query += '')) {\n    query = query.replace(/\\s+$/, '') + ' (Hit any key)';\n  }\n  /* eslint-disable key-spacing */\n\n\n  exports.keyIn(query, margeOptions({\n    // -------- default\n    limit: null\n  }, options, {\n    // -------- forced\n    hideEchoBack: true,\n    mask: ''\n  })); // added:     guide\n\n  /* eslint-enable key-spacing */\n  // return; // nothing is returned\n};\n\nexports.keyInSelect = function (items, query, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n    // -------- default\n    hideEchoBack: false\n  }, options, {\n    // -------- forced\n    trueValue: null,\n    falseValue: null,\n    caseSensitive: false,\n    // limit (by items),\n    phContent: function (param) {\n      return param === 'itemsCount' ? items.length + '' : param === 'firstItem' ? (items[0] + '').trim() : param === 'lastItem' ? (items[items.length - 1] + '').trim() : null;\n    }\n  }),\n      // added:     guide, cancel\n  keylist = '',\n      key2i = {},\n      charCode = 49\n  /* '1' */\n  ,\n      display = '\\n';\n  /* eslint-enable key-spacing */\n\n  if (!Array.isArray(items) || !items.length || items.length > 35) {\n    throw '`items` must be Array (max length: 35).';\n  }\n\n  items.forEach(function (item, i) {\n    var key = String.fromCharCode(charCode);\n    keylist += key;\n    key2i[key] = i;\n    display += '[' + key + '] ' + (item + '').trim() + '\\n';\n    charCode = charCode === 57\n    /* '9' */\n    ? 97\n    /* 'a' */\n    : charCode + 1;\n  });\n\n  if (!options || options.cancel !== false) {\n    keylist += '0';\n    key2i['0'] = -1;\n    display += '[0] ' + (options && options.cancel != null && typeof options.cancel !== 'boolean' ? (options.cancel + '').trim() : 'CANCEL') + '\\n';\n  }\n\n  readOptions.limit = keylist;\n  display += '\\n';\n\n  if (query == null) {\n    query = 'Choose one from list: ';\n  }\n\n  if (query += '') {\n    if (!options || options.guide !== false) {\n      query = query.replace(/\\s*:?\\s*$/, '') + ' [$<limit>]: ';\n    }\n\n    display += query;\n  }\n\n  return key2i[exports.keyIn(display, readOptions).toLowerCase()];\n};\n\nexports.getRawInput = function () {\n  return rawInput;\n}; // ======== DEPRECATED ========\n\n\nfunction _setOption(optionName, args) {\n  var options;\n\n  if (args.length) {\n    options = {};\n    options[optionName] = args[0];\n  }\n\n  return exports.setDefaultOptions(options)[optionName];\n}\n\nexports.setPrint = function () {\n  return _setOption('print', arguments);\n};\n\nexports.setPrompt = function () {\n  return _setOption('prompt', arguments);\n};\n\nexports.setEncoding = function () {\n  return _setOption('encoding', arguments);\n};\n\nexports.setMask = function () {\n  return _setOption('mask', arguments);\n};\n\nexports.setBufferSize = function () {\n  return _setOption('bufferSize', arguments);\n};","map":{"version":3,"sources":["/Users/brentparker/DEV/assignments/caeser-cipher/node_modules/readline-sync/lib/readline-sync.js"],"names":["IS_WIN","process","platform","ALGORITHM_CIPHER","ALGORITHM_HASH","DEFAULT_ERR_MSG","fs","require","TTY","binding","childProc","pathUtil","defaultOptions","prompt","hideEchoBack","mask","limit","limitMessage","defaultInput","trueValue","falseValue","caseSensitive","keepWhitespace","encoding","bufferSize","print","history","cd","phContent","preCheck","fdR","isRawMode","salt","lastInput","inputHistory","_DBG_useExt","_DBG_checkOptions","_DBG_checkMethod","fdW","ttyR","extHostPath","extHostArgs","tempdir","rawInput","getHostArgs","options","encodeArg","arg","replace","chr","charCodeAt","concat","conf","args","Object","keys","forEach","optionName","push","display","displayOnly","keyIn","_execFileSync","execOptions","getTempfile","name","suffix","filepath","fd","tmpdir","join","openSync","e","code","closeSync","res","pathStdout","pathStderr","pathExit","pathDone","crypto","hostArgs","shellPath","shellArgs","exitCode","extMessage","shasum","decipher","password","createHash","update","pid","Math","random","digest","createDecipher","env","ComSpec","Q","map","execPath","__dirname","spawn","error","Error","message","method","program","readFileSync","trim","input","final","unlinkSync","readlineExt","PSModulePath","stdio","stdin","execFileSync","stderr","status","signal","_readlineSync","displaySave","silent","tryExt","fsB","constants","verNum","getFsB","O_RDWR","ver","nums","split","version","isTTY","pause","_handle","open","parseInt","stdout","isCooked","atEol","buffer","reqSize","readSize","chunk","line","setRawMode","mode","writeSync","Buffer","allocUnsafe","alloc","RegExp","readSync","toString","String","fromCharCode","match","Array","length","flattenArray","array","validator","flatArray","_flattenArray","isArray","escapePattern","pattern","s","substr","margeOptions","optionsList","prototype","slice","call","arguments","optionNames","fromDefault","shift","unshift","reduce","optionsPart","hasOwnProperty","noEchoBack","noTrim","value","isNaN","type","isMatched","comps","some","comp","toLowerCase","parseFloat","test","replaceHomePath","path","expand","homePath","normalize","HOMEDRIVE","HOMEPATH","HOME","replacePlaceholder","text","generator","PTN_INNER","rePlaceholder","rePlaceholderCompat","getPlaceholderText","escape","placeholder","pre","param","post","array2charlist","collectSymbols","group","groupClass","charCode","symbols","values","suppressed","addGroup","groups","chars","curChar","curGroupClass","curCharCode","joinChunks","chunks","getPhContent","resCharlist","filter","cwd","basename","Date","str","toUpperCase","getPhCharlist","matches","exec","from","to","step","parseCl","cl","reToken","taken","part","toBool","getValidLine","forceNext","histInput","resCheck","_getPhContent","addDisplay","limitSrc","displaySrc","chdir","exports","_DBG_set_useExt","val","_DBG_set_checkOptions","_DBG_set_checkMethod","_DBG_clearHistory","setDefaultOptions","question","query","readOptions","questionEMail","questionNewPassword","min","max","charlist","confirmMessage","unmatchMessage","res1","res2","_questionNum","parser","validValue","getValidValue","questionInt","questionFloat","questionPath","validPath","exists","stat","mkdirParents","dirPath","parents","dir","resolve","sep","existsSync","mkdirSync","statSync","isDirectory","realpathSync","create","dirname","isFile","size","validate","getClHandler","commandHandler","clHandler","hIndex","cmd","cmdKey","hRes","apply","_","promptCL","promptLoop","inputHandler","promptCLLoop","promptSimShell","USER","HOSTNAME","_keyInYN","guide","keyInYN","keyInYNStrict","keyInPause","keyInSelect","items","keylist","key2i","item","i","key","cancel","getRawInput","_setOption","setPrint","setPrompt","setEncoding","setMask","setBufferSize"],"mappings":"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","sourcesContent":["/*\n * readlineSync\n * https://github.com/anseki/readline-sync\n *\n * Copyright (c) 2019 anseki\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar\n  IS_WIN = process.platform === 'win32',\n\n  ALGORITHM_CIPHER = 'aes-256-cbc',\n  ALGORITHM_HASH = 'sha256',\n  DEFAULT_ERR_MSG = 'The current environment doesn\\'t support interactive reading from TTY.',\n\n  fs = require('fs'),\n  TTY = process.binding('tty_wrap').TTY,\n  childProc = require('child_process'),\n  pathUtil = require('path'),\n\n  defaultOptions = {\n    /* eslint-disable key-spacing */\n    prompt:             '> ',\n    hideEchoBack:       false,\n    mask:               '*',\n    limit:              [],\n    limitMessage:       'Input another, please.$<( [)limit(])>',\n    defaultInput:       '',\n    trueValue:          [],\n    falseValue:         [],\n    caseSensitive:      false,\n    keepWhitespace:     false,\n    encoding:           'utf8',\n    bufferSize:         1024,\n    print:              void 0,\n    history:            true,\n    cd:                 false,\n    phContent:          void 0,\n    preCheck:           void 0\n    /* eslint-enable key-spacing */\n  },\n\n  fdR = 'none',\n  isRawMode = false,\n  salt = 0,\n  lastInput = '',\n  inputHistory = [],\n  _DBG_useExt = false,\n  _DBG_checkOptions = false,\n  _DBG_checkMethod = false,\n  fdW, ttyR, extHostPath, extHostArgs, tempdir, rawInput;\n\nfunction getHostArgs(options) {\n  // Send any text to crazy Windows shell safely.\n  function encodeArg(arg) {\n    return arg.replace(/[^\\w\\u0080-\\uFFFF]/g, function(chr) {\n      return '#' + chr.charCodeAt(0) + ';';\n    });\n  }\n\n  return extHostArgs.concat((function(conf) {\n    var args = [];\n    Object.keys(conf).forEach(function(optionName) {\n      if (conf[optionName] === 'boolean') {\n        if (options[optionName]) { args.push('--' + optionName); }\n      } else if (conf[optionName] === 'string') {\n        if (options[optionName]) {\n          args.push('--' + optionName, encodeArg(options[optionName]));\n        }\n      }\n    });\n    return args;\n  })({\n    /* eslint-disable key-spacing */\n    display:        'string',\n    displayOnly:    'boolean',\n    keyIn:          'boolean',\n    hideEchoBack:   'boolean',\n    mask:           'string',\n    limit:          'string',\n    caseSensitive:  'boolean'\n    /* eslint-enable key-spacing */\n  }));\n}\n\n// piping via files (for Node.js v0.10-)\nfunction _execFileSync(options, execOptions) {\n\n  function getTempfile(name) {\n    var suffix = '',\n      filepath, fd;\n    tempdir = tempdir || require('os').tmpdir();\n\n    while (true) {\n      filepath = pathUtil.join(tempdir, name + suffix);\n      try {\n        fd = fs.openSync(filepath, 'wx');\n      } catch (e) {\n        if (e.code === 'EEXIST') {\n          suffix++;\n          continue;\n        } else {\n          throw e;\n        }\n      }\n      fs.closeSync(fd);\n      break;\n    }\n    return filepath;\n  }\n\n  var res = {},\n    pathStdout = getTempfile('readline-sync.stdout'),\n    pathStderr = getTempfile('readline-sync.stderr'),\n    pathExit = getTempfile('readline-sync.exit'),\n    pathDone = getTempfile('readline-sync.done'),\n    crypto = require('crypto'),\n    hostArgs, shellPath, shellArgs, exitCode, extMessage, shasum, decipher, password;\n\n  shasum = crypto.createHash(ALGORITHM_HASH);\n  shasum.update('' + process.pid + (salt++) + Math.random());\n  password = shasum.digest('hex');\n  decipher = crypto.createDecipher(ALGORITHM_CIPHER, password);\n\n  hostArgs = getHostArgs(options);\n  if (IS_WIN) {\n    shellPath = process.env.ComSpec || 'cmd.exe';\n    process.env.Q = '\"'; // The quote (\") that isn't escaped.\n    // `()` for ignore space by echo\n    shellArgs = ['/V:ON', '/S', '/C',\n      '(%Q%' + shellPath + '%Q% /V:ON /S /C %Q%' + /* ESLint bug? */ // eslint-disable-line no-path-concat\n        '%Q%' + extHostPath + '%Q%' +\n          hostArgs.map(function(arg) { return ' %Q%' + arg + '%Q%'; }).join('') +\n        ' & (echo !ERRORLEVEL!)>%Q%' + pathExit + '%Q%%Q%) 2>%Q%' + pathStderr + '%Q%' +\n      ' |%Q%' + process.execPath + '%Q% %Q%' + __dirname + '\\\\encrypt.js%Q%' +\n        ' %Q%' + ALGORITHM_CIPHER + '%Q% %Q%' + password + '%Q%' +\n        ' >%Q%' + pathStdout + '%Q%' +\n      ' & (echo 1)>%Q%' + pathDone + '%Q%'];\n  } else {\n    shellPath = '/bin/sh';\n    shellArgs = ['-c',\n      // Use `()`, not `{}` for `-c` (text param)\n      '(\"' + extHostPath + '\"' + /* ESLint bug? */ // eslint-disable-line no-path-concat\n          hostArgs.map(function(arg) { return \" '\" + arg.replace(/'/g, \"'\\\\''\") + \"'\"; }).join('') +\n        '; echo $?>\"' + pathExit + '\") 2>\"' + pathStderr + '\"' +\n      ' |\"' + process.execPath + '\" \"' + __dirname + '/encrypt.js\"' +\n        ' \"' + ALGORITHM_CIPHER + '\" \"' + password + '\"' +\n        ' >\"' + pathStdout + '\"' +\n      '; echo 1 >\"' + pathDone + '\"'];\n  }\n  if (_DBG_checkMethod) { _DBG_checkMethod('_execFileSync', hostArgs); }\n  try {\n    childProc.spawn(shellPath, shellArgs, execOptions);\n  } catch (e) {\n    res.error = new Error(e.message);\n    res.error.method = '_execFileSync - spawn';\n    res.error.program = shellPath;\n    res.error.args = shellArgs;\n  }\n\n  while (fs.readFileSync(pathDone, {encoding: options.encoding}).trim() !== '1') {} // eslint-disable-line no-empty\n  if ((exitCode =\n      fs.readFileSync(pathExit, {encoding: options.encoding}).trim()) === '0') {\n    res.input =\n      decipher.update(fs.readFileSync(pathStdout, {encoding: 'binary'}),\n        'hex', options.encoding) +\n      decipher.final(options.encoding);\n  } else {\n    extMessage = fs.readFileSync(pathStderr, {encoding: options.encoding}).trim();\n    res.error = new Error(DEFAULT_ERR_MSG + (extMessage ? '\\n' + extMessage : ''));\n    res.error.method = '_execFileSync';\n    res.error.program = shellPath;\n    res.error.args = shellArgs;\n    res.error.extMessage = extMessage;\n    res.error.exitCode = +exitCode;\n  }\n\n  fs.unlinkSync(pathStdout);\n  fs.unlinkSync(pathStderr);\n  fs.unlinkSync(pathExit);\n  fs.unlinkSync(pathDone);\n\n  return res;\n}\n\nfunction readlineExt(options) {\n  var res = {},\n    execOptions = {env: process.env, encoding: options.encoding},\n    hostArgs, extMessage;\n\n  if (!extHostPath) {\n    if (IS_WIN) {\n      if (process.env.PSModulePath) { // Windows PowerShell\n        extHostPath = 'powershell.exe';\n        extHostArgs = ['-ExecutionPolicy', 'Bypass',\n          '-File', __dirname + '\\\\read.ps1']; // eslint-disable-line no-path-concat\n      } else { // Windows Script Host\n        extHostPath = 'cscript.exe';\n        extHostArgs = ['//nologo', __dirname + '\\\\read.cs.js']; // eslint-disable-line no-path-concat\n      }\n    } else {\n      extHostPath = '/bin/sh';\n      extHostArgs = [__dirname + '/read.sh']; // eslint-disable-line no-path-concat\n    }\n  }\n  if (IS_WIN && !process.env.PSModulePath) { // Windows Script Host\n    // ScriptPW (Win XP and Server2003) needs TTY stream as STDIN.\n    // In this case, If STDIN isn't TTY, an error is thrown.\n    execOptions.stdio = [process.stdin];\n  }\n\n  if (childProc.execFileSync) {\n    hostArgs = getHostArgs(options);\n    if (_DBG_checkMethod) { _DBG_checkMethod('execFileSync', hostArgs); }\n    try {\n      res.input = childProc.execFileSync(extHostPath, hostArgs, execOptions);\n    } catch (e) { // non-zero exit code\n      extMessage = e.stderr ? (e.stderr + '').trim() : '';\n      res.error = new Error(DEFAULT_ERR_MSG + (extMessage ? '\\n' + extMessage : ''));\n      res.error.method = 'execFileSync';\n      res.error.program = extHostPath;\n      res.error.args = hostArgs;\n      res.error.extMessage = extMessage;\n      res.error.exitCode = e.status;\n      res.error.code = e.code;\n      res.error.signal = e.signal;\n    }\n  } else {\n    res = _execFileSync(options, execOptions);\n  }\n  if (!res.error) {\n    res.input = res.input.replace(/^\\s*'|'\\s*$/g, '');\n    options.display = '';\n  }\n\n  return res;\n}\n\n/*\n  display:            string\n  displayOnly:        boolean\n  keyIn:              boolean\n  hideEchoBack:       boolean\n  mask:               string\n  limit:              string (pattern)\n  caseSensitive:      boolean\n  keepWhitespace:     boolean\n  encoding, bufferSize, print\n*/\nfunction _readlineSync(options) {\n  var input = '',\n    displaySave = options.display,\n    silent = !options.display && options.keyIn && options.hideEchoBack && !options.mask;\n\n  function tryExt() {\n    var res = readlineExt(options);\n    if (res.error) { throw res.error; }\n    return res.input;\n  }\n\n  if (_DBG_checkOptions) { _DBG_checkOptions(options); }\n\n  (function() { // open TTY\n    var fsB, constants, verNum;\n\n    function getFsB() {\n      if (!fsB) {\n        fsB = process.binding('fs'); // For raw device path\n        constants = process.binding('constants');\n        // for v6.3.0+\n        constants = constants && constants.fs && typeof constants.fs.O_RDWR === 'number'\n          ? constants.fs : constants;\n      }\n      return fsB;\n    }\n\n    if (typeof fdR !== 'string') { return; }\n    fdR = null;\n\n    if (IS_WIN) {\n      // iojs-v2.3.2+ input stream can't read first line. (#18)\n      // ** Don't get process.stdin before check! **\n      // Fixed v5.1.0\n      // Fixed v4.2.4\n      // It regressed again in v5.6.0, it is fixed in v6.2.0.\n      verNum = (function(ver) { // getVerNum\n        var nums = ver.replace(/^\\D+/, '').split('.');\n        var verNum = 0;\n        if ((nums[0] = +nums[0])) { verNum += nums[0] * 10000; }\n        if ((nums[1] = +nums[1])) { verNum += nums[1] * 100; }\n        if ((nums[2] = +nums[2])) { verNum += nums[2]; }\n        return verNum;\n      })(process.version);\n      if (!(verNum >= 20302 && verNum < 40204 || verNum >= 50000 && verNum < 50100 || verNum >= 50600 && verNum < 60200) &&\n          process.stdin.isTTY) {\n        process.stdin.pause();\n        fdR = process.stdin.fd;\n        ttyR = process.stdin._handle;\n      } else {\n        try {\n          // The stream by fs.openSync('\\\\\\\\.\\\\CON', 'r') can't switch to raw mode.\n          // 'CONIN$' might fail on XP, 2000, 7 (x86).\n          fdR = getFsB().open('CONIN$', constants.O_RDWR, parseInt('0666', 8));\n          ttyR = new TTY(fdR, true);\n        } catch (e) { /* ignore */ }\n      }\n\n      if (process.stdout.isTTY) {\n        fdW = process.stdout.fd;\n      } else {\n        try {\n          fdW = fs.openSync('\\\\\\\\.\\\\CON', 'w');\n        } catch (e) { /* ignore */ }\n        if (typeof fdW !== 'number') { // Retry\n          try {\n            fdW = getFsB().open('CONOUT$', constants.O_RDWR, parseInt('0666', 8));\n          } catch (e) { /* ignore */ }\n        }\n      }\n\n    } else {\n      if (process.stdin.isTTY) {\n        process.stdin.pause();\n        try {\n          fdR = fs.openSync('/dev/tty', 'r'); // device file, not process.stdin\n          ttyR = process.stdin._handle;\n        } catch (e) { /* ignore */ }\n      } else {\n        // Node.js v0.12 read() fails.\n        try {\n          fdR = fs.openSync('/dev/tty', 'r');\n          ttyR = new TTY(fdR, false);\n        } catch (e) { /* ignore */ }\n      }\n\n      if (process.stdout.isTTY) {\n        fdW = process.stdout.fd;\n      } else {\n        try {\n          fdW = fs.openSync('/dev/tty', 'w');\n        } catch (e) { /* ignore */ }\n      }\n    }\n  })();\n\n  (function() { // try read\n    var isCooked = !options.hideEchoBack && !options.keyIn,\n      atEol, limit, buffer, reqSize, readSize, chunk, line;\n    rawInput = '';\n\n    // Node.js v0.10- returns an error if same mode is set.\n    function setRawMode(mode) {\n      if (mode === isRawMode) { return true; }\n      if (ttyR.setRawMode(mode) !== 0) { return false; }\n      isRawMode = mode;\n      return true;\n    }\n\n    if (_DBG_useExt || !ttyR ||\n        typeof fdW !== 'number' && (options.display || !isCooked)) {\n      input = tryExt();\n      return;\n    }\n\n    if (options.display) {\n      fs.writeSync(fdW, options.display);\n      options.display = '';\n    }\n    if (options.displayOnly) { return; }\n\n    if (!setRawMode(!isCooked)) {\n      input = tryExt();\n      return;\n    }\n\n    reqSize = options.keyIn ? 1 : options.bufferSize;\n    // Check `allocUnsafe` to make sure of the new API.\n    buffer = Buffer.allocUnsafe && Buffer.alloc ? Buffer.alloc(reqSize) : new Buffer(reqSize);\n\n    if (options.keyIn && options.limit) {\n      limit = new RegExp('[^' + options.limit + ']',\n        'g' + (options.caseSensitive ? '' : 'i'));\n    }\n\n    while (true) {\n      readSize = 0;\n      try {\n        readSize = fs.readSync(fdR, buffer, 0, reqSize);\n      } catch (e) {\n        if (e.code !== 'EOF') {\n          setRawMode(false);\n          input += tryExt();\n          return;\n        }\n      }\n      if (readSize > 0) {\n        chunk = buffer.toString(options.encoding, 0, readSize);\n        rawInput += chunk;\n      } else {\n        chunk = '\\n';\n        rawInput += String.fromCharCode(0);\n      }\n\n      if (chunk && typeof (line = (chunk.match(/^(.*?)[\\r\\n]/) || [])[1]) === 'string') {\n        chunk = line;\n        atEol = true;\n      }\n\n      // other ctrl-chars\n      // eslint-disable-next-line no-control-regex\n      if (chunk) { chunk = chunk.replace(/[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]/g, ''); }\n      if (chunk && limit) { chunk = chunk.replace(limit, ''); }\n\n      if (chunk) {\n        if (!isCooked) {\n          if (!options.hideEchoBack) {\n            fs.writeSync(fdW, chunk);\n          } else if (options.mask) {\n            fs.writeSync(fdW, (new Array(chunk.length + 1)).join(options.mask));\n          }\n        }\n        input += chunk;\n      }\n\n      if (!options.keyIn && atEol ||\n        options.keyIn && input.length >= reqSize) { break; }\n    }\n\n    if (!isCooked && !silent) { fs.writeSync(fdW, '\\n'); }\n    setRawMode(false);\n  })();\n\n  if (options.print && !silent) {\n    options.print(\n      displaySave + (\n        options.displayOnly ? '' : (\n          options.hideEchoBack ? (new Array(input.length + 1)).join(options.mask) : input\n        ) + '\\n' // must at least write '\\n'\n      ),\n      options.encoding);\n  }\n\n  return options.displayOnly ? '' :\n    (lastInput = options.keepWhitespace || options.keyIn ? input : input.trim());\n}\n\nfunction flattenArray(array, validator) {\n  var flatArray = [];\n  function _flattenArray(array) {\n    if (array == null) { return; }\n    if (Array.isArray(array)) {\n      array.forEach(_flattenArray);\n    } else if (!validator || validator(array)) {\n      flatArray.push(array);\n    }\n  }\n  _flattenArray(array);\n  return flatArray;\n}\n\nfunction escapePattern(pattern) {\n  return pattern.replace(/[\\x00-\\x7f]/g, // eslint-disable-line no-control-regex\n    function(s) { return '\\\\x' + ('00' + s.charCodeAt().toString(16)).substr(-2); });\n}\n\n// margeOptions(options1, options2 ... )\n// margeOptions(true, options1, options2 ... )\n//    arg1=true : Start from defaultOptions and pick elements of that.\nfunction margeOptions() {\n  var optionsList = Array.prototype.slice.call(arguments),\n    optionNames, fromDefault;\n\n  if (optionsList.length && typeof optionsList[0] === 'boolean') {\n    fromDefault = optionsList.shift();\n    if (fromDefault) {\n      optionNames = Object.keys(defaultOptions);\n      optionsList.unshift(defaultOptions);\n    }\n  }\n\n  return optionsList.reduce(function(options, optionsPart) {\n    if (optionsPart == null) { return options; }\n\n    // ======== DEPRECATED ========\n    if (optionsPart.hasOwnProperty('noEchoBack') &&\n        !optionsPart.hasOwnProperty('hideEchoBack')) {\n      optionsPart.hideEchoBack = optionsPart.noEchoBack;\n      delete optionsPart.noEchoBack;\n    }\n    if (optionsPart.hasOwnProperty('noTrim') &&\n        !optionsPart.hasOwnProperty('keepWhitespace')) {\n      optionsPart.keepWhitespace = optionsPart.noTrim;\n      delete optionsPart.noTrim;\n    }\n    // ======== /DEPRECATED ========\n\n    if (!fromDefault) { optionNames = Object.keys(optionsPart); }\n    optionNames.forEach(function(optionName) {\n      var value;\n      if (!optionsPart.hasOwnProperty(optionName)) { return; }\n      value = optionsPart[optionName];\n      /* eslint-disable no-multi-spaces */\n      switch (optionName) {\n        //                    _readlineSync <- *    * -> defaultOptions\n        // ================ string\n        case 'mask':                        // *    *\n        case 'limitMessage':                //      *\n        case 'defaultInput':                //      *\n        case 'encoding':                    // *    *\n          value = value != null ? value + '' : '';\n          if (value && optionName !== 'limitMessage') { value = value.replace(/[\\r\\n]/g, ''); }\n          options[optionName] = value;\n          break;\n        // ================ number(int)\n        case 'bufferSize':                  // *    *\n          if (!isNaN(value = parseInt(value, 10)) && typeof value === 'number') {\n            options[optionName] = value; // limited updating (number is needed)\n          }\n          break;\n        // ================ boolean\n        case 'displayOnly':                 // *\n        case 'keyIn':                       // *\n        case 'hideEchoBack':                // *    *\n        case 'caseSensitive':               // *    *\n        case 'keepWhitespace':              // *    *\n        case 'history':                     //      *\n        case 'cd':                          //      *\n          options[optionName] = !!value;\n          break;\n        // ================ array\n        case 'limit':                       // *    *     to string for readlineExt\n        case 'trueValue':                   //      *\n        case 'falseValue':                  //      *\n          options[optionName] = flattenArray(value, function(value) {\n            var type = typeof value;\n            return type === 'string' || type === 'number' ||\n              type === 'function' || value instanceof RegExp;\n          }).map(function(value) {\n            return typeof value === 'string' ? value.replace(/[\\r\\n]/g, '') : value;\n          });\n          break;\n        // ================ function\n        case 'print':                       // *    *\n        case 'phContent':                   //      *\n        case 'preCheck':                    //      *\n          options[optionName] = typeof value === 'function' ? value : void 0;\n          break;\n        // ================ other\n        case 'prompt':                      //      *\n        case 'display':                     // *\n          options[optionName] = value != null ? value : '';\n          break;\n        // no default\n      }\n      /* eslint-enable no-multi-spaces */\n    });\n    return options;\n  }, {});\n}\n\nfunction isMatched(res, comps, caseSensitive) {\n  return comps.some(function(comp) {\n    var type = typeof comp;\n    return type === 'string'\n      ? (caseSensitive ? res === comp : res.toLowerCase() === comp.toLowerCase()) :\n      type === 'number' ? parseFloat(res) === comp :\n      type === 'function' ? comp(res) :\n      comp instanceof RegExp ? comp.test(res) : false;\n  });\n}\n\nfunction replaceHomePath(path, expand) {\n  var homePath = pathUtil.normalize(\n    IS_WIN ? (process.env.HOMEDRIVE || '') + (process.env.HOMEPATH || '') :\n    process.env.HOME || '').replace(/[/\\\\]+$/, '');\n  path = pathUtil.normalize(path);\n  return expand ? path.replace(/^~(?=\\/|\\\\|$)/, homePath) :\n    path.replace(new RegExp('^' + escapePattern(homePath) +\n      '(?=\\\\/|\\\\\\\\|$)', IS_WIN ? 'i' : ''), '~');\n}\n\nfunction replacePlaceholder(text, generator) {\n  var PTN_INNER = '(?:\\\\(([\\\\s\\\\S]*?)\\\\))?(\\\\w+|.-.)(?:\\\\(([\\\\s\\\\S]*?)\\\\))?',\n    rePlaceholder = new RegExp('(\\\\$)?(\\\\$<' + PTN_INNER + '>)', 'g'),\n    rePlaceholderCompat = new RegExp('(\\\\$)?(\\\\$\\\\{' + PTN_INNER + '\\\\})', 'g');\n\n  function getPlaceholderText(s, escape, placeholder, pre, param, post) {\n    var text;\n    return escape || typeof (text = generator(param)) !== 'string' ? placeholder :\n      text ? (pre || '') + text + (post || '') : '';\n  }\n\n  return text.replace(rePlaceholder, getPlaceholderText)\n    .replace(rePlaceholderCompat, getPlaceholderText);\n}\n\nfunction array2charlist(array, caseSensitive, collectSymbols) {\n  var group = [],\n    groupClass = -1,\n    charCode = 0,\n    symbols = '',\n    values, suppressed;\n  function addGroup(groups, group) {\n    if (group.length > 3) { // ellipsis\n      groups.push(group[0] + '...' + group[group.length - 1]);\n      suppressed = true;\n    } else if (group.length) {\n      groups = groups.concat(group);\n    }\n    return groups;\n  }\n\n  values = array.reduce(function(chars, value) {\n    return chars.concat((value + '').split(''));\n  }, []).reduce(function(groups, curChar) {\n    var curGroupClass, curCharCode;\n    if (!caseSensitive) { curChar = curChar.toLowerCase(); }\n    curGroupClass = /^\\d$/.test(curChar) ? 1 :\n      /^[A-Z]$/.test(curChar) ? 2 : /^[a-z]$/.test(curChar) ? 3 : 0;\n    if (collectSymbols && curGroupClass === 0) {\n      symbols += curChar;\n    } else {\n      curCharCode = curChar.charCodeAt(0);\n      if (curGroupClass && curGroupClass === groupClass &&\n          curCharCode === charCode + 1) {\n        group.push(curChar);\n      } else {\n        groups = addGroup(groups, group);\n        group = [curChar];\n        groupClass = curGroupClass;\n      }\n      charCode = curCharCode;\n    }\n    return groups;\n  }, []);\n  values = addGroup(values, group); // last group\n  if (symbols) { values.push(symbols); suppressed = true; }\n  return {values: values, suppressed: suppressed};\n}\n\nfunction joinChunks(chunks, suppressed) {\n  return chunks.join(chunks.length > 2 ? ', ' : suppressed ? ' / ' : '/');\n}\n\nfunction getPhContent(param, options) {\n  var resCharlist = {},\n    text, values, arg;\n  if (options.phContent) {\n    text = options.phContent(param, options);\n  }\n  if (typeof text !== 'string') {\n    switch (param) {\n      case 'hideEchoBack':\n      case 'mask':\n      case 'defaultInput':\n      case 'caseSensitive':\n      case 'keepWhitespace':\n      case 'encoding':\n      case 'bufferSize':\n      case 'history':\n      case 'cd':\n        text = !options.hasOwnProperty(param) ? '' :\n          typeof options[param] === 'boolean' ? (options[param] ? 'on' : 'off') :\n          options[param] + '';\n        break;\n      // case 'prompt':\n      // case 'query':\n      // case 'display':\n      //   text = options.hasOwnProperty('displaySrc') ? options.displaySrc + '' : '';\n      //   break;\n      case 'limit':\n      case 'trueValue':\n      case 'falseValue':\n        values = options[options.hasOwnProperty(param + 'Src') ? param + 'Src' : param];\n        if (options.keyIn) { // suppress\n          resCharlist = array2charlist(values, options.caseSensitive);\n          values = resCharlist.values;\n        } else {\n          values = values.filter(function(value) {\n            var type = typeof value;\n            return type === 'string' || type === 'number';\n          });\n        }\n        text = joinChunks(values, resCharlist.suppressed);\n        break;\n      case 'limitCount':\n      case 'limitCountNotZero':\n        text = options[options.hasOwnProperty('limitSrc') ? 'limitSrc' : 'limit'].length;\n        text = text || param !== 'limitCountNotZero' ? text + '' : '';\n        break;\n      case 'lastInput':\n        text = lastInput;\n        break;\n      case 'cwd':\n      case 'CWD':\n      case 'cwdHome':\n        text = process.cwd();\n        if (param === 'CWD') {\n          text = pathUtil.basename(text);\n        } else if (param === 'cwdHome') {\n          text = replaceHomePath(text);\n        }\n        break;\n      case 'date':\n      case 'time':\n      case 'localeDate':\n      case 'localeTime':\n        text = (new Date())['to' +\n          param.replace(/^./, function(str) { return str.toUpperCase(); }) +\n          'String']();\n        break;\n      default: // with arg\n        if (typeof (arg = (param.match(/^history_m(\\d+)$/) || [])[1]) === 'string') {\n          text = inputHistory[inputHistory.length - arg] || '';\n        }\n    }\n  }\n  return text;\n}\n\nfunction getPhCharlist(param) {\n  var matches = /^(.)-(.)$/.exec(param),\n    text = '',\n    from, to, code, step;\n  if (!matches) { return null; }\n  from = matches[1].charCodeAt(0);\n  to = matches[2].charCodeAt(0);\n  step = from < to ? 1 : -1;\n  for (code = from; code !== to + step; code += step) { text += String.fromCharCode(code); }\n  return text;\n}\n\n// cmd \"arg\" \" a r g \" \"\" 'a\"r\"g' \"a\"\"rg\" \"arg\nfunction parseCl(cl) {\n  var reToken = new RegExp(/(\\s*)(?:(\"|')(.*?)(?:\\2|$)|(\\S+))/g),\n    taken = '',\n    args = [],\n    matches, part;\n  cl = cl.trim();\n  while ((matches = reToken.exec(cl))) {\n    part = matches[3] || matches[4] || '';\n    if (matches[1]) {\n      args.push(taken);\n      taken = '';\n    }\n    taken += part;\n  }\n  if (taken) { args.push(taken); }\n  return args;\n}\n\nfunction toBool(res, options) {\n  return (\n    (options.trueValue.length &&\n      isMatched(res, options.trueValue, options.caseSensitive)) ? true :\n    (options.falseValue.length &&\n      isMatched(res, options.falseValue, options.caseSensitive)) ? false : res);\n}\n\nfunction getValidLine(options) {\n  var res, forceNext, limitMessage,\n    matches, histInput, args, resCheck;\n\n  function _getPhContent(param) { return getPhContent(param, options); }\n  function addDisplay(text) { options.display += (/[^\\r\\n]$/.test(options.display) ? '\\n' : '') + text; }\n\n  options.limitSrc = options.limit;\n  options.displaySrc = options.display;\n  options.limit = ''; // for readlineExt\n  options.display = replacePlaceholder(options.display + '', _getPhContent);\n\n  while (true) {\n    res = _readlineSync(options);\n    forceNext = false;\n    limitMessage = '';\n\n    if (options.defaultInput && !res) { res = options.defaultInput; }\n\n    if (options.history) {\n      if ((matches = /^\\s*!(?:!|-1)(:p)?\\s*$/.exec(res))) { // `!!` `!-1` +`:p`\n        histInput = inputHistory[0] || '';\n        if (matches[1]) { // only display\n          forceNext = true;\n        } else { // replace input\n          res = histInput;\n        }\n        // Show it even if it is empty (NL only).\n        addDisplay(histInput + '\\n');\n        if (!forceNext) { // Loop may break\n          options.displayOnly = true;\n          _readlineSync(options);\n          options.displayOnly = false;\n        }\n      } else if (res && res !== inputHistory[inputHistory.length - 1]) {\n        inputHistory = [res];\n      }\n    }\n\n    if (!forceNext && options.cd && res) {\n      args = parseCl(res);\n      switch (args[0].toLowerCase()) {\n        case 'cd':\n          if (args[1]) {\n            try {\n              process.chdir(replaceHomePath(args[1], true));\n            } catch (e) {\n              addDisplay(e + '');\n            }\n          }\n          forceNext = true;\n          break;\n        case 'pwd':\n          addDisplay(process.cwd());\n          forceNext = true;\n          break;\n        // no default\n      }\n    }\n\n    if (!forceNext && options.preCheck) {\n      resCheck = options.preCheck(res, options);\n      res = resCheck.res;\n      if (resCheck.forceNext) { forceNext = true; } // Don't switch to false.\n    }\n\n    if (!forceNext) {\n      if (!options.limitSrc.length ||\n        isMatched(res, options.limitSrc, options.caseSensitive)) { break; }\n      if (options.limitMessage) {\n        limitMessage = replacePlaceholder(options.limitMessage, _getPhContent);\n      }\n    }\n\n    addDisplay((limitMessage ? limitMessage + '\\n' : '') +\n      replacePlaceholder(options.displaySrc + '', _getPhContent));\n  }\n  return toBool(res, options);\n}\n\n// for dev\nexports._DBG_set_useExt = function(val) { _DBG_useExt = val; };\nexports._DBG_set_checkOptions = function(val) { _DBG_checkOptions = val; };\nexports._DBG_set_checkMethod = function(val) { _DBG_checkMethod = val; };\nexports._DBG_clearHistory = function() { lastInput = ''; inputHistory = []; };\n\n// ------------------------------------\n\nexports.setDefaultOptions = function(options) {\n  defaultOptions = margeOptions(true, options);\n  return margeOptions(true); // copy\n};\n\nexports.question = function(query, options) {\n  /* eslint-disable key-spacing */\n  return getValidLine(margeOptions(margeOptions(true, options), {\n    display:            query\n  }));\n  /* eslint-enable key-spacing */\n};\n\nexports.prompt = function(options) {\n  var readOptions = margeOptions(true, options);\n  readOptions.display = readOptions.prompt;\n  return getValidLine(readOptions);\n};\n\nexports.keyIn = function(query, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions(margeOptions(true, options), {\n    display:            query,\n    keyIn:              true,\n    keepWhitespace:     true\n  });\n  /* eslint-enable key-spacing */\n\n  // char list\n  readOptions.limitSrc = readOptions.limit.filter(function(value) {\n    var type = typeof value;\n    return type === 'string' || type === 'number';\n  }).map(function(text) {\n    return replacePlaceholder(text + '', getPhCharlist);\n  });\n  // pattern\n  readOptions.limit = escapePattern(readOptions.limitSrc.join(''));\n\n  ['trueValue', 'falseValue'].forEach(function(optionName) {\n    readOptions[optionName] = readOptions[optionName].reduce(function(comps, comp) {\n      var type = typeof comp;\n      if (type === 'string' || type === 'number') {\n        comps = comps.concat((comp + '').split(''));\n      } else { comps.push(comp); }\n      return comps;\n    }, []);\n  });\n\n  readOptions.display = replacePlaceholder(readOptions.display + '',\n    function(param) { return getPhContent(param, readOptions); });\n\n  return toBool(_readlineSync(readOptions), readOptions);\n};\n\n// ------------------------------------\n\nexports.questionEMail = function(query, options) {\n  if (query == null) { query = 'Input e-mail address: '; }\n  /* eslint-disable key-spacing */\n  return exports.question(query, margeOptions({\n    // -------- default\n    hideEchoBack:       false,\n    // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address\n    limit:              /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n    limitMessage:       'Input valid e-mail address, please.',\n    trueValue:          null,\n    falseValue:         null\n  }, options, {\n    // -------- forced\n    keepWhitespace:     false,\n    cd:                 false\n  }));\n  /* eslint-enable key-spacing */\n};\n\nexports.questionNewPassword = function(query, options) {\n  /* eslint-disable key-spacing */\n  var resCharlist, min, max,\n    readOptions = margeOptions({\n      // -------- default\n      hideEchoBack:       true,\n      mask:               '*',\n      limitMessage:       'It can include: $<charlist>\\n' +\n                            'And the length must be: $<length>',\n      trueValue:          null,\n      falseValue:         null,\n      caseSensitive:      true\n    }, options, {\n      // -------- forced\n      history:            false,\n      cd:                 false,\n      // limit (by charlist etc.),\n      phContent: function(param) {\n        return param === 'charlist' ? resCharlist.text :\n          param === 'length' ? min + '...' + max : null;\n      }\n    }),\n    // added:     charlist, min, max, confirmMessage, unmatchMessage\n    charlist, confirmMessage, unmatchMessage,\n    limit, limitMessage, res1, res2;\n  /* eslint-enable key-spacing */\n  options = options || {};\n\n  charlist = replacePlaceholder(\n    options.charlist ? options.charlist + '' : '$<!-~>', getPhCharlist);\n  if (isNaN(min = parseInt(options.min, 10)) || typeof min !== 'number') { min = 12; }\n  if (isNaN(max = parseInt(options.max, 10)) || typeof max !== 'number') { max = 24; }\n  limit = new RegExp('^[' + escapePattern(charlist) +\n    ']{' + min + ',' + max + '}$');\n  resCharlist = array2charlist([charlist], readOptions.caseSensitive, true);\n  resCharlist.text = joinChunks(resCharlist.values, resCharlist.suppressed);\n\n  confirmMessage = options.confirmMessage != null ? options.confirmMessage :\n    'Reinput a same one to confirm it: ';\n  unmatchMessage = options.unmatchMessage != null ? options.unmatchMessage :\n    'It differs from first one.' +\n      ' Hit only the Enter key if you want to retry from first one.';\n\n  if (query == null) { query = 'Input new password: '; }\n\n  limitMessage = readOptions.limitMessage;\n  while (!res2) {\n    readOptions.limit = limit;\n    readOptions.limitMessage = limitMessage;\n    res1 = exports.question(query, readOptions);\n\n    readOptions.limit = [res1, ''];\n    readOptions.limitMessage = unmatchMessage;\n    res2 = exports.question(confirmMessage, readOptions);\n  }\n\n  return res1;\n};\n\nfunction _questionNum(query, options, parser) {\n  var validValue;\n  function getValidValue(value) {\n    validValue = parser(value);\n    return !isNaN(validValue) && typeof validValue === 'number';\n  }\n  /* eslint-disable key-spacing */\n  exports.question(query, margeOptions({\n    // -------- default\n    limitMessage:       'Input valid number, please.'\n  }, options, {\n    // -------- forced\n    limit:              getValidValue,\n    cd:                 false\n    // trueValue, falseValue, caseSensitive, keepWhitespace don't work.\n  }));\n  /* eslint-enable key-spacing */\n  return validValue;\n}\nexports.questionInt = function(query, options) {\n  return _questionNum(query, options, function(value) { return parseInt(value, 10); });\n};\nexports.questionFloat = function(query, options) {\n  return _questionNum(query, options, parseFloat);\n};\n\nexports.questionPath = function(query, options) {\n  /* eslint-disable key-spacing */\n  var error = '',\n    validPath, // before readOptions\n    readOptions = margeOptions({\n      // -------- default\n      hideEchoBack:       false,\n      limitMessage:       '$<error(\\n)>Input valid path, please.' +\n                            '$<( Min:)min>$<( Max:)max>',\n      history:            true,\n      cd:                 true\n    }, options, {\n      // -------- forced\n      keepWhitespace:     false,\n      limit: function(value) {\n        var exists, stat, res;\n        value = replaceHomePath(value, true);\n        error = ''; // for validate\n        // mkdir -p\n        function mkdirParents(dirPath) {\n          dirPath.split(/\\/|\\\\/).reduce(function(parents, dir) {\n            var path = pathUtil.resolve((parents += dir + pathUtil.sep));\n            if (!fs.existsSync(path)) {\n              fs.mkdirSync(path);\n            } else if (!fs.statSync(path).isDirectory()) {\n              throw new Error('Non directory already exists: ' + path);\n            }\n            return parents;\n          }, '');\n        }\n\n        try {\n          exists = fs.existsSync(value);\n          validPath = exists ? fs.realpathSync(value) : pathUtil.resolve(value);\n          // options.exists default: true, not-bool: no-check\n          if (!options.hasOwnProperty('exists') && !exists ||\n              typeof options.exists === 'boolean' && options.exists !== exists) {\n            error = (exists ? 'Already exists' : 'No such file or directory') +\n              ': ' + validPath;\n            return false;\n          }\n          if (!exists && options.create) {\n            if (options.isDirectory) {\n              mkdirParents(validPath);\n            } else {\n              mkdirParents(pathUtil.dirname(validPath));\n              fs.closeSync(fs.openSync(validPath, 'w')); // touch\n            }\n            validPath = fs.realpathSync(validPath);\n          }\n          if (exists && (options.min || options.max ||\n              options.isFile || options.isDirectory)) {\n            stat = fs.statSync(validPath);\n            // type check first (directory has zero size)\n            if (options.isFile && !stat.isFile()) {\n              error = 'Not file: ' + validPath;\n              return false;\n            } else if (options.isDirectory && !stat.isDirectory()) {\n              error = 'Not directory: ' + validPath;\n              return false;\n            } else if (options.min && stat.size < +options.min ||\n                options.max && stat.size > +options.max) {\n              error = 'Size ' + stat.size + ' is out of range: ' + validPath;\n              return false;\n            }\n          }\n          if (typeof options.validate === 'function' &&\n              (res = options.validate(validPath)) !== true) {\n            if (typeof res === 'string') { error = res; }\n            return false;\n          }\n        } catch (e) {\n          error = e + '';\n          return false;\n        }\n        return true;\n      },\n      // trueValue, falseValue, caseSensitive don't work.\n      phContent: function(param) {\n        return param === 'error' ? error :\n          param !== 'min' && param !== 'max' ? null :\n          options.hasOwnProperty(param) ? options[param] + '' : '';\n      }\n    });\n    // added:     exists, create, min, max, isFile, isDirectory, validate\n  /* eslint-enable key-spacing */\n  options = options || {};\n\n  if (query == null) { query = 'Input path (you can \"cd\" and \"pwd\"): '; }\n\n  exports.question(query, readOptions);\n  return validPath;\n};\n\n// props: preCheck, args, hRes, limit\nfunction getClHandler(commandHandler, options) {\n  var clHandler = {},\n    hIndex = {};\n  if (typeof commandHandler === 'object') {\n    Object.keys(commandHandler).forEach(function(cmd) {\n      if (typeof commandHandler[cmd] === 'function') {\n        hIndex[options.caseSensitive ? cmd : cmd.toLowerCase()] = commandHandler[cmd];\n      }\n    });\n    clHandler.preCheck = function(res) {\n      var cmdKey;\n      clHandler.args = parseCl(res);\n      cmdKey = clHandler.args[0] || '';\n      if (!options.caseSensitive) { cmdKey = cmdKey.toLowerCase(); }\n      clHandler.hRes =\n        cmdKey !== '_' && hIndex.hasOwnProperty(cmdKey)\n          ? hIndex[cmdKey].apply(res, clHandler.args.slice(1)) :\n          hIndex.hasOwnProperty('_') ? hIndex._.apply(res, clHandler.args) : null;\n      return {res: res, forceNext: false};\n    };\n    if (!hIndex.hasOwnProperty('_')) {\n      clHandler.limit = function() { // It's called after preCheck.\n        var cmdKey = clHandler.args[0] || '';\n        if (!options.caseSensitive) { cmdKey = cmdKey.toLowerCase(); }\n        return hIndex.hasOwnProperty(cmdKey);\n      };\n    }\n  } else {\n    clHandler.preCheck = function(res) {\n      clHandler.args = parseCl(res);\n      clHandler.hRes = typeof commandHandler === 'function'\n        ? commandHandler.apply(res, clHandler.args) : true; // true for break loop\n      return {res: res, forceNext: false};\n    };\n  }\n  return clHandler;\n}\n\nexports.promptCL = function(commandHandler, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n      // -------- default\n      hideEchoBack:       false,\n      limitMessage:       'Requested command is not available.',\n      caseSensitive:      false,\n      history:            true\n    }, options),\n    //   -------- forced\n    //   trueValue, falseValue, keepWhitespace don't work.\n    //   preCheck, limit (by clHandler)\n    clHandler = getClHandler(commandHandler, readOptions);\n  /* eslint-enable key-spacing */\n  readOptions.limit = clHandler.limit;\n  readOptions.preCheck = clHandler.preCheck;\n  exports.prompt(readOptions);\n  return clHandler.args;\n};\n\nexports.promptLoop = function(inputHandler, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n    // -------- default\n    hideEchoBack:       false,\n    trueValue:          null,\n    falseValue:         null,\n    caseSensitive:      false,\n    history:            true\n  }, options);\n  /* eslint-enable key-spacing */\n  while (true) { if (inputHandler(exports.prompt(readOptions))) { break; } }\n  // return; // nothing is returned\n};\n\nexports.promptCLLoop = function(commandHandler, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n      // -------- default\n      hideEchoBack:       false,\n      limitMessage:       'Requested command is not available.',\n      caseSensitive:      false,\n      history:            true\n    }, options),\n    //   -------- forced\n    //   trueValue, falseValue, keepWhitespace don't work.\n    //   preCheck, limit (by clHandler)\n    clHandler = getClHandler(commandHandler, readOptions);\n  /* eslint-enable key-spacing */\n  readOptions.limit = clHandler.limit;\n  readOptions.preCheck = clHandler.preCheck;\n  while (true) {\n    exports.prompt(readOptions);\n    if (clHandler.hRes) { break; }\n  }\n  // return; // nothing is returned\n};\n\nexports.promptSimShell = function(options) {\n  /* eslint-disable key-spacing */\n  return exports.prompt(margeOptions({\n    // -------- default\n    hideEchoBack:       false,\n    history:            true\n  }, options, {\n    // -------- forced\n    prompt:             (function() {\n      return IS_WIN ? '$<cwd>>' :\n        // 'user@host:cwd$ '\n        (process.env.USER || '') +\n        (process.env.HOSTNAME ? '@' + process.env.HOSTNAME.replace(/\\..*$/, '') : '') +\n        ':$<cwdHome>$ ';\n    })()\n  }));\n  /* eslint-enable key-spacing */\n};\n\nfunction _keyInYN(query, options, limit) {\n  var res;\n  if (query == null) { query = 'Are you sure? '; }\n  if ((!options || options.guide !== false) && (query += '')) {\n    query = query.replace(/\\s*:?\\s*$/, '') + ' [y/n]: ';\n  }\n  /* eslint-disable key-spacing */\n  res = exports.keyIn(query, margeOptions(options, {\n    // -------- forced\n    hideEchoBack:       false,\n    limit:              limit,\n    trueValue:          'y',\n    falseValue:         'n',\n    caseSensitive:      false\n    // mask doesn't work.\n  }));\n  // added:     guide\n  /* eslint-enable key-spacing */\n  return typeof res === 'boolean' ? res : '';\n}\nexports.keyInYN = function(query, options) { return _keyInYN(query, options); };\nexports.keyInYNStrict = function(query, options) { return _keyInYN(query, options, 'yn'); };\n\nexports.keyInPause = function(query, options) {\n  if (query == null) { query = 'Continue...'; }\n  if ((!options || options.guide !== false) && (query += '')) {\n    query = query.replace(/\\s+$/, '') + ' (Hit any key)';\n  }\n  /* eslint-disable key-spacing */\n  exports.keyIn(query, margeOptions({\n    // -------- default\n    limit:              null\n  }, options, {\n    // -------- forced\n    hideEchoBack:       true,\n    mask:               ''\n  }));\n  // added:     guide\n  /* eslint-enable key-spacing */\n  // return; // nothing is returned\n};\n\nexports.keyInSelect = function(items, query, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n      // -------- default\n      hideEchoBack:       false\n    }, options, {\n      // -------- forced\n      trueValue:          null,\n      falseValue:         null,\n      caseSensitive:      false,\n      // limit (by items),\n      phContent: function(param) {\n        return param === 'itemsCount' ? items.length + '' :\n          param === 'firstItem' ? (items[0] + '').trim() :\n          param === 'lastItem' ? (items[items.length - 1] + '').trim() : null;\n      }\n    }),\n    // added:     guide, cancel\n    keylist = '',\n    key2i = {},\n    charCode = 49 /* '1' */,\n    display = '\\n';\n  /* eslint-enable key-spacing */\n  if (!Array.isArray(items) || !items.length || items.length > 35) {\n    throw '`items` must be Array (max length: 35).';\n  }\n\n  items.forEach(function(item, i) {\n    var key = String.fromCharCode(charCode);\n    keylist += key;\n    key2i[key] = i;\n    display += '[' + key + '] ' + (item + '').trim() + '\\n';\n    charCode = charCode === 57 /* '9' */ ? 97 /* 'a' */ : charCode + 1;\n  });\n  if (!options || options.cancel !== false) {\n    keylist += '0';\n    key2i['0'] = -1;\n    display += '[0] ' +\n      (options && options.cancel != null && typeof options.cancel !== 'boolean'\n        ? (options.cancel + '').trim() : 'CANCEL') + '\\n';\n  }\n  readOptions.limit = keylist;\n  display += '\\n';\n\n  if (query == null) { query = 'Choose one from list: '; }\n  if ((query += '')) {\n    if (!options || options.guide !== false) {\n      query = query.replace(/\\s*:?\\s*$/, '') + ' [$<limit>]: ';\n    }\n    display += query;\n  }\n\n  return key2i[exports.keyIn(display, readOptions).toLowerCase()];\n};\n\nexports.getRawInput = function() { return rawInput; };\n\n// ======== DEPRECATED ========\nfunction _setOption(optionName, args) {\n  var options;\n  if (args.length) { options = {}; options[optionName] = args[0]; }\n  return exports.setDefaultOptions(options)[optionName];\n}\nexports.setPrint = function() { return _setOption('print', arguments); };\nexports.setPrompt = function() { return _setOption('prompt', arguments); };\nexports.setEncoding = function() { return _setOption('encoding', arguments); };\nexports.setMask = function() { return _setOption('mask', arguments); };\nexports.setBufferSize = function() { return _setOption('bufferSize', arguments); };\n"]},"metadata":{},"sourceType":"script"}